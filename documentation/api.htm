<html>
<head>
<title>phpAdsNew API</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
p {  font-family: Arial, Helvetica, sans-serif; font-size: 10pt; clip:      rect(   ); position: relative; left: 40px; width: 600px}
h3 {  font-family: Arial, Helvetica, sans-serif; font-size: 16px; font-weight: bold; color: #333366; position: relative; left: 40px; clip:      rect(   ); padding-top: 40px}
pre {  font-family: "Courier New", Courier, mono; font-size: 9pt; position: relative; left: 40px; clip:    rect(   ); background-color: #EEEEEE; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 10px; width: 600px}
h4 { font-family: Arial, Helvetica, sans-serif; font-size: 14px; font-weight: bold; color: #333366; position: relative; left: 40px; clip:    rect(   ); top: 16px}
li { font-family: Arial, Helvetica, sans-serif; font-size: 10pt; clip:   rect(   ); width: 600px ; padding-bottom: 10px}
ul {  list-style-type: circle}
h1 { font-family: Arial, Helvetica, sans-serif; font-size: 24px; font-weight: bold; color: #333366; position: relative; left: 40px; clip: rect( ); padding-top: 40px }
hr { color: #333366; ; position: relative; width: 600px; left: 40px; clip:  rect(   ); text-align: left}
a { color: #333366; text-decoration: none; }
a:hover { color: #333366; text-decoration: underline; }
h5 { font-family: Arial, Helvetica, sans-serif; font-size: 12px; font-weight: bold; color: #333366; position: relative; left: 40px; clip: rect( ); top: 16px }
-->
</style>
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1>phpAdsNew</h1>
<p>phpAdsNew is a banner management and tracking system written in PHP.<br>
  <br>
  [<a href="faq.htm">faq</a>] [<a href="configuration.htm">configuration</a>] 
  [<a href="api.htm">api</a>] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [<a href="http://www.sourceforge.net/projects/phpadsnew/">homepage</a>] 
  [<a href="http://sourceforge.net/tracker/?atid=111386&group_id=11386&func=browse">report 
  bugs</a>] [<a href="http://sourceforge.net/forum/?group_id=11386">forum</a>] 
</p>
<hr><h3>API</h3>
<p>As an administrator you need to familiarize yourself with phpAdsNew's backend 
  structure. phpAdsNew gives you three options to include a banner on your site: 
  local mode, remote invocation and remote invocation with JavaScript. It is recommended 
  to use the first method where possible.</p>
<h3>Local Mode</h3>
<p>This is the traditional style of a including a banner within a PHP-powered 
  website. On every page you want to have a banner, you have to include phpadsnew.inc.php. 
  This file is in your phpAdsNew-installation-directory. Banners are displayed 
  using the view()-function. This function has the following syntax:</p>
  
<pre>int view (mixed what [, int clientID [, string target <br>          [, string source[, bool withText = 0[, array context]]]]); </pre>
<p>The view() function does not work well in template-based website's (for example 
  phplib or fasttemplate), because the view() function prints the banner directly 
  to the screen. The banner would appear before the rest of the page is printed. 
  In order to make phpAdsNew work in template based website's there is a function 
  that returns both the html code ($array[&quot;html&quot;]) and the banner id 
  ($array[&quot;bannerID&quot;]) in an array. The function does not print anything 
  to the screen.</p>
<pre>array view_raw (mixed what [, int clientID [, string target <br>                [, string source[, bool withText = 0[, array context]]]]); </pre>
<p></p>
<h3>Remote Invocation</h3>
<p>It is also possible to use phpAdsNew on sites that lack PHP-support. Random 
  or pre-defined banners can be shown using a standard &lt;img&gt;-construct. 
  Just like in Local Mode, you can use the &quot;what&quot; argument to select 
  the banner.</p>
<pre>&lt;a href=&quot;click.php&quot;&gt;&lt;img src=&quot;phpads.php&quot;&gt;&lt;/a&gt; </pre>
<p>To use multiple banners on a single page, select a unique name for each banner 
  and assign it to the &quot;n&quot; argument for both &quot;click.php&quot; and 
  &quot;phpads.php&quot;.</p>
<p>Remote Invocation does have some problems and HTML banners won't work at all.<br>
  It is recommended to use Remote Invocation with Javascript instead of normal 
  Remote Invocation.</p>
<h5>Some examples:</h5>
<pre>&lt;a href=&quot;click.php?n=ban1&quot;&gt;&lt;img src=&quot;phpads.php?what=468x60&amp;n=ban1&quot;&gt;&lt;/a&gt;
  Show a randomly selected banner of the size 468x60.

&lt;a href=&quot;click.php?n=top&quot;&gt;&lt;img src=&quot;phpads.php?what=main&amp;n=top&quot;&gt;&lt;/a&gt;
  Show a randomly selected banner from the &quot;main&quot; group with the name &quot;top&quot;.

&lt;a href=&quot;click.php?n=left&quot;&gt;&lt;img src=&quot;phpads.php?what=468x60&amp;n=left&quot;&gt;&lt;/a&gt;
  Show a randomly selected banner of the size 468x60 with the name &quot;left&quot;. </pre>
<h3>Remote Invocation with JavaScript</h3>
<p>This technique allows you to use HTML banners remotely. Just like in Local 
  Mode, you can use the &quot;what&quot; argument to select the banner. All you 
  need to do is insert this code:<br>
</p>
<pre>&lt;script language=&quot;JavaScript&quot; src=&quot;remotehtmlview.php&quot;&gt;&lt;/script&gt;
</pre>
<p>You should also add parameters to the remotehtmlview.php.</p>
<pre>&lt;script language=&quot;JavaScript&quot; src=&quot;remotehtmlview.php?what=main&amp;target=_blank&quot;&gt;
&lt;/script&gt;<br>   This would show a banner from the main group and, when clicked, 
   a new window would be opened. </pre>
<h3>Parameters</h3>
<p>The following parameters are used to determine which banners will be displayed. 
  They can be used in local mode and both types of remote invocation. In local 
  mode the parameters will have to be used with the view() function. In remote 
  invocation the parameters need to be added to the phpads.php file. In remote 
  invocation with Javascript the parameters need to be added to remotehtmlview.php.</p>
<h4>The &quot;what&quot; parameter</h4>
<p>The &quot;what&quot; parameter is used to specify keywords, discriminate between 
  the different dimensions of the banner, select an html banner or select a banner 
  by identification number.</p>
<h5>Expressions</h5>
<p>The &quot;what&quot; parameter can consist of one or more expressions. Each 
  expression will be executed when the previous expression has failed. Multiple 
  expression must be separated with the character | and may not be separated by 
  spaces.<br>
  <br>
  If you don't provide an expression and leave the &quot;what&quot; parameter 
  empty phpAdsNew match any active banner and will display one randomly.</p>
<p>For example if the first expression does not match any banner the second expression 
  will be executed. If the second expression does not match any banner the third 
  expression will be executed. This also means that if the first expression does 
  match a banner, the second and third expression won't be executed.<br>
  You can specify as much expressions as you like, but each additional expression 
  may require some extra system resources, such a processing time and database 
  queries. <br>
  <br>
  For example:</p>
<pre>RIGHT: expression1<br><br>RIGHT: expression1|expression2|expression3<br><br>WRONG: expression1 | expression2</pre>
<h5>Logical operators</h5>
<p>Each expression can consist of one or more statements. Each statement tries 
  to match one or more banners. The simplest expression would only consist of 
  one statement. phpAdsNew will try to find a banner that matches this statement. 
  However, it is possible to use multiple statements and use logical operators.<br>
  <br>
  The logical operators look a bit different than the ones used in MySQL and PHP, 
  but work the same way.<br>
  <br>
  Statements are separated by a comma (,) and statement can begin with a switch 
  to set the behavior. Do not put a space between the operator and the statement.<br>
  <br>
  If you separate statements without a switch, the separator will become an OR 
  operator. </p>
<pre>statement,statement <br>   Meaning: statement OR statement </pre>
<p>If you use the + or _ switch the separator will become an AND operator. Please 
  note: you can't use the + switch in remote invocation and must use the _ switch, 
  which means exactly the same.<br>
</p>
<pre>statement,+statement
statement,_statement <br>   Meaning: statement AND statement </pre>
<p>If you use the - switch the separator will become a NOT operator. You can use 
  the - switch on the first statement.</p>
<pre>statement,-statement
   Meaning: statement NOT statement<br> <br>-statement,-statement<br>   Meaning: NOT statement NOT statement</pre>
<p>For example</p>
<pre>statement1,statement2,statement3 <br>   Meaning: statement1 OR statement2 OR statement3
   
statement1,+statement2,+statement3 <br>   Meaning: statement1 AND statement2 AND statement3
   
statement1,+statement2,-statement3 <br>   Meaning: statement1 AND statement2 NOT statement3</pre>
<p>OR takes precedence over AND and NOT. AND and NOT have equal precedence. At 
  this moment it is not possible to use parentheses to force precedence! </p>
<p>For example:</p>
<pre>statement1,+statement2,statement3
   Meaning: (statement1 AND statement2) OR statement3
   
statement1,+statement2,statement1,+statement3
   Meaning: (statement1 AND statement2) OR (statement1 AND statement3)<br>   Meaning: statement1 AND (statement2 OR statement3)
   
statement1,statement2,-statement3
   Meaning statement1 OR (statement2 NOT statement3)
   
statement1,-statement3,statement2,-statement3
   Meaning (statement1 NOT statement3) OR (statement2 NOT statement3)<br>   Meaning (statement1 OR statement2) NOT statement3</pre>
<h5>Statements</h5>
<p>Each statement tries to match a specific property of the available banners. 
</p>
<p><i>bannerid:[digits]</i> or <i>[digits]</i><br>
  You can match a banner by looking at the banner ID property. phpAdsNew will 
  try to find a banner with an ID equal to the digits you specified.</p>
<pre>1<br>   Match a banner with ID 1<br> <br>bannerid:23<br>   Match a banner with ID 23</pre>
<p><i>clientid:[digits]</i><br>
  You can match a banner by looking at the ID of the owner of the banner. phpAdsNew 
  will try to find a banner, which owner's ID is equal to the digits you specified.</p>
<pre>clientid:32
   Match a banner which owner had ID 32</pre>
<p><i>[width]x[height]</i><br>
  You can match a banner by looking at the dimension of the banner. phpAdsNew 
  will try to find a banner with the same width and height you specified. This 
  will only work for banners stored in MySQL or banners referred through URL. 
  HTML banners do not have this property and will not be matched when you try 
  to match a banner with a specific dimension.<br>
</p>
<pre>468x60<br>   Match a banner with width 468 and height 60</pre>
<p><i>format:[type] </i>or<i> html</i><br>
  You can match a banner by looking at the banner format. phpAdsNew will try to 
  find a banner with the same format as the type you specified. If you want to 
  match html banners you can use a shortcut and specify only 'html'.<br>
</p>
<pre>format:html<br>   Match a banner of type HTML<br> <br>html<br>   Match a banner of type HTML</pre>
<p><i>[keyword]</i><br>
  You can match a banner by looking at the keywords of the banner. phpAdsNew will 
  try to find a banner with the keyword you specified. You can use digits in your 
  keywords, but every keyword must contain at least one character other than a 
  digit or an 'x'. You can't use a colon (:) in your keywords.<br>
</p>
<pre>mybanners<br>   Match a banner with keyword &quot;mybanners&quot;</pre>
<h5>The global keyword</h5>
<p>In phpAdsNew you can define global banners. You can add the &quot;global&quot; 
  keyword to your banners through the admin interface. Every banner with the &quot;global&quot; 
  keyword will be considered a match.<br>
  <br>
  The behavior only works if you are using one expression with only keywords. 
  Otherwise you will have to add the &quot;global&quot; keyword to the expressions 
  by hand.</p>
<pre>key1<br>   Meaning: Match a banner with keyword &quot;key1&quot; or &quot;global&quot;<br><br>key1|key2,global<br>   Meaning: Match a banner with the keyword &quot;key1&quot;. If there are no banners <br>   with this keyword try to match a banner with keyword &quot;key2&quot; or &quot;global&quot;<br>  <br>key1|global<br>   Meaning: Match a banner with the keyword &quot;key1&quot;. If there are no matching <br>   banners, match a banner with keyword &quot;global&quot;</pre>
<h5>Creating a failsafe</h5>
<p>In certain conditions you may want to automatically generate keywords and add 
  these to your expression, for example:</p>
<pre>$weekday = date(&quot;w&quot;); // 0=sunday, 1=monday, etc.
view (&quot;day$weekday&quot;);</pre>
<p>The above example will try to display a different banner for each day of the 
  week. On Sunday it will try to display a banner with the keyword &quot;day0&quot;, 
  on Monday it will try to display a banner with the keyword &quot;day1&quot;, 
  etc.<br>
  However if you didn't define banners any banner with the keyword &quot;day3&quot;. 
  phpAdsNew will not show any banners on Wednesday. You may want to create a failsafe. 
  If there are no banners available for a certain day you want to display a general 
  banner. You could add some new banners and assign the keyword &quot;general&quot; 
  to them. And use a construction like this :</p>
<pre>$weekday = date(&quot;w&quot;); // 0=sunday, 1=monday, etc. <br>view (&quot;day$weekday|general&quot;);</pre>
<p>The above example will try to display a banner for each day of the week, but 
  if it can't find any banners on a specific day it will try to display a banner 
  with the keyword &quot;general&quot;.</p>
<h5>Examples</h5>
<pre>key1|main<br>   Match a banner with keyword &quot;key1&quot;. If there are no banners with <br>   this keyword try to match a banner with keyword &quot;main&quot;<br>  <br>key1,key2|clientid:3<br>   Match a banner with keyword &quot;key1&quot; or &quot;key2&quot;. If there are no banners<br>   with this keyword try to match a banner with client id 3<br> <br>key1,-clientid:2<br>   Match a banner with keyword &quot;key1&quot;, don't match banners with clientid 2.<br> <br>4|clientid:2,clientid:4|key1|global<br>   Match a banner with id 4. If there are no matching banners try to match a<br>   banner with client id 2 or 4. If there are no matching banners try to match<br>   a banner with keyword &quot;key1&quot;. If there are no matching banners try to match<br>   a banner with keyword &quot;global&quot;.<br> <br>html,+key1,+key2,-clientid:2<br>   Match a html banner with keyword &quot;key1&quot; and &quot;key2&quot;, but don't match banners<br>   from client with ID 2.<br> <br>3,+468x60,4,+468x60,5,+468x60<br>   Match a banner with a width of 468 and a height of 60. <br>   The banner ID must be 3, 4 or 5.<br> <br>key1,-468x60,key2,-468x60<br>   Match a banner with keyword &quot;key1&quot; or &quot;key2&quot;. <br>   The banner must not have a width of 468 and a height of 60</pre>
<h4>The &quot;clientID&quot; parameter</h4>
<p>The optional argument clientID allows you to retrieve only banners by a specific 
  client. Specify &quot;&quot; to view banners from all clients (in case you need 
  the third or fourth argument, else don't specify it at all).</p>
<pre>view(&quot;468x60&quot;, 1);</pre>
<h4>The &quot;target&quot; parameter</h4>
<p>The optional argument &quot;target&quot; allow you to specify a frame target 
  to be used when the user clicks on the ad. For example, use '_blank' to force 
  a new browser window to open, '_top' to replace the current window (and break 
  frames), etc. For more information about this parameter you can take a look 
  at the target attribute in the HTML specification.<br>
</p>
<pre>view(&quot;maingroup&quot;, 0, &quot;_blank&quot;); </pre>
<h4>The &quot;source&quot; parameter</h4>
<p>The optional argument &quot;source&quot; allows you to specify the name of 
  the current page (for example: &quot;main page&quot; or &quot;subpage1&quot;). 
  Source ACL can then use this name to allow or deny banner displays on that page.</p>
<h4>The &quot;withText&quot; parameter</h4>
<p>The optional argument withText allows you to show a banner with its associated 
  line of text below it (for example, &quot;Support our sponsor&quot; is a common 
  line of text). The &quot;WithText&quot; parameter is turned on by default. If 
  want to turn it of you should set this parameter to 0.</p>
<pre>view(&quot;maingroup&quot;, 0, &quot;&quot;, 0);</pre>
<h4>The &quot;context&quot; parameter</h4>
<p>The optional argument &quot;context&quot; is an array specifying banners to 
  limit the search to or/and banners to be excluded from the search. It is an 
  array containing as many associative arrays as you want. The key of the entries 
  must either be &quot;==&quot; to denote a banner to which the search is limited 
  to or &quot;!=&quot; to denote a banner to be excluded from the search. The 
  value of an entry is a banner ID. For example, to show the same randomly selected 
  banner on the top and bottom of a page, you could use the following:</p>
<pre>// Top of the page:
$id = view(&quot;main&quot;, 5); 

// Bottom of the page
$arr = array(
             array(&quot;==&quot; =&gt; $id)
            );

view(&quot;main&quot;, 0, &quot;&quot;, &quot;&quot;, 1, $arr);
</pre>
<p>To make sure that the page does not show the same banner two times, you could 
  use this:</p>
<pre>
// Top of the page:
$id = view(&quot;main&quot;, 5); 

// Bottom of the page
$arr = array(
             array(&quot;!=&quot; =&gt; $id)
            );

view(&quot;main&quot;, 0, &quot;&quot;, &quot;&quot;, 1, $arr); </pre>
<h4>Some examples:</h4>
<pre>view(1);
   Displays the banner with the bannerID of 1. <br>
view(&quot;html&quot;);
   Displays a randomly selected HTML banner <br>
view(&quot;468x60&quot;, 0, &quot;_blank&quot;);
   Displays a randomly selected banner with a width of 468 pixels and a height 
   of 60 pixels. If user clicks on it, the target destination will be opened 
   in a new window. 

view(&quot;mybanners&quot;);
   Displays a randomly selected banner from the group 
   &quot;mybanners&quot; (in other words: with that keyword). 

view(&quot;&quot;, 0, &quot;_blank&quot;, &quot;Main&quot;);
   Displays a randomly selected banner which does not have a Deny for 
   Source ACL on &quot;Main&quot; </pre>
<h3>Example</h3>
<p>A sample HTML file could look like this:</p>
<pre>&lt;?
   require(&quot;/usr/local/etc/phpAds/phpadsnew.inc.php&quot;); 
?&gt; 
   
&lt;html&gt;
  &lt;head&gt; 
    &lt;title&gt;phpAdsNew demo&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;?
      view(&quot;468x60&quot;);
    ?&gt;
  &lt;/body&gt;
&lt;/html&gt; </pre>
</body>
</html>
